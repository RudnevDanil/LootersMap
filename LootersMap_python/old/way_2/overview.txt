Here are presented file, which are 2nd ans 3rd generation in face recognition project.

---------------
1st generation. 
Using OpenCV for founding and Haar clasifier for recognition. Some scripts works with avi firmat, read it frame by frame, some works with jpg and process them, some works with ip-camera broadcast.

---------------
2nd generation. 
Using OpenCV just for taking jpg/avi/broadcast. Founding faces and their recognition works via face_recognition library. face_recognition have methods for returning encodings of the face. It has "hog" and "cnn" parametr.  This library use just one kernel, if parametr is "hog". Processing with "cnn" parametr impossible on CPU only systems. Quality of recognition with "hog" parametr isn't high enough, even if using f lot of imgs for training.

---------------
3rd generation. 
Using OpenCV just for taking jpg/avi/broadcast. For detection faces using mtcnn library. This library could find face location and 5 points(eyes, nose,mounth). For additional face detection and for exception wrong answers after mtcnn using insightface, which return face location, 5 points, gender and 512-length embedding vector and also normed embedding vector. This system uses just few photos of each terget for high-quality recognition. mtcnn can find difficult faces.

File structure:
- - - - parse_stream_and_recognize_mtcnn.py	___ Parse stream and show recognition results. Takes just one face.
- - - - parse_stream_and_recognize_mtcnn_few.py	___ Parse stream and show recognition results. Takes just all faces.
- - - - save_faces_mtcnn.py			___ Parse stream and save faces into img format.
- - - - train_mtcnn.py				___ Counting embeddings and write it into file.
- - - - try_to_rotate_img_by_eyes.py		___ Defining of rotation function. Angle counting by eyes line. Whis function works and debagged,  but doesn't uses somewhere.
